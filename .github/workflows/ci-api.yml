name: CI API
on:
  push:
    branches: [ main , develop]
    paths: [ 'BackEnd/**' , '.github/workflows/**']
  pull_request:
    branches: [ main , develop]
    paths: [ 'BackEnd/**' , '.github/workflows/**']
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - working-directory: ./BackEnd
        name: Restore
        run: dotnet restore
      - working-directory: ./BackEnd
        name: Build
        run: dotnet build --no-restore
      - working-directory: ./BackEnd
        name: Test
        run: dotnet test --no-build --verbosity normal
  quality-security-scan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./BackEnd
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore

      - name: Format Check
        run: dotnet format MyApi.csproj --verify-no-changes

      - name: Build
        run: dotnet build MyApi.csproj --no-restore -c Release

      - name: Test with Coverage
        run: dotnet test MyApi.csproj --no-build --collect:"XPlat Code Coverage" --results-directory ./coverage

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/**/coverage.opencover.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=ring9834
            -Dsonar.projectKey=ring9834_cicd-react-dotnet
            -Dsonar.branch.name=main

      - name: Snyk Security Scan (.NET)
        uses: snyk/actions/dotnet@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=MyApi.csproj --severity-threshold=high

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Render
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.RENDER_DEPLOY_HOOK }}
          method: 'POST'